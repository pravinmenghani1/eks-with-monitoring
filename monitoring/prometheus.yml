global:
  scrape_interval: 15s
  evaluation_interval: 15s

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'kubernetes-apiservers'
    scheme: https
    tls_config:
      ca_file: /etc/prometheus/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /etc/prometheus/k8s-token
    kubernetes_sd_configs:
    - role: endpoints
      api_server: CLUSTER_ENDPOINT
      tls_config:
        ca_file: /etc/prometheus/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /etc/prometheus/k8s-token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    scheme: https
    tls_config:
      ca_file: /etc/prometheus/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /etc/prometheus/k8s-token
    kubernetes_sd_configs:
    - role: node
      api_server: CLUSTER_ENDPOINT
      tls_config:
        ca_file: /etc/prometheus/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /etc/prometheus/k8s-token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)

  - job_name: 'kubernetes-node-exporter'
    scheme: http
    static_configs:
      - targets: [NODE_IPS_FORMATTED]

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
      api_server: CLUSTER_ENDPOINT
      tls_config:
        ca_file: /etc/prometheus/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /etc/prometheus/k8s-token
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name